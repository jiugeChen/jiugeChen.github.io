<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2019/07/16/csscsscss/css1%20copy/"/>
      <url>/2019/07/16/csscsscss/css1%20copy/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>常用CSS样式</title>
      <link href="/2019/07/16/csscsscss/css1/"/>
      <url>/2019/07/16/csscsscss/css1/</url>
      
        <content type="html"><![CDATA[<h2 id="CSS超出部分显示省略号"><a href="#CSS超出部分显示省略号" class="headerlink" title="CSS超出部分显示省略号"></a>CSS超出部分显示省略号</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 单行 */</span></span><br><span class="line"><span class="selector-class">.overflow</span>&#123;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">text-overflow</span>:ellipsis;</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 多行 */</span></span><br><span class="line"><span class="selector-class">.more_overflow</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: -webkit-box;</span><br><span class="line"><span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line"><span class="attribute">-webkit-box-orient</span>: vertical;</span><br><span class="line"><span class="attribute">-webkit-line-clamp</span>: <span class="number">2</span>; <span class="comment">/* 显示行数 */</span></span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">## <span class="selector-tag">css</span>元素垂直居中</span><br><span class="line">```<span class="selector-tag">css</span></span><br><span class="line"><span class="selector-class">.verticalcenter</span>&#123;</span><br><span class="line"> <span class="attribute">position</span>: relative;</span><br><span class="line"> <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line"> <span class="attribute">-webkit-transform</span>: <span class="built_in">translateY</span>(-50%);</span><br><span class="line"> <span class="attribute">-o-transform</span>: <span class="built_in">translateY</span>(-50%);</span><br><span class="line"> <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-50%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="banner自适应屏幕代码"><a href="#banner自适应屏幕代码" class="headerlink" title="banner自适应屏幕代码"></a>banner自适应屏幕代码</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;    </span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">position</span>:relative;</span><br><span class="line">    <span class="attribute">overflow</span>:hidden;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">3000px</span>;<span class="comment">/*图片宽度*/</span>           </span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>:-<span class="number">1500px</span>;<span class="comment">/*图片宽度的一半*/</span>       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>`</code></p>]]></content>
      
      
      <categories>
          
          <category> Css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字符串常用操作</title>
      <link href="/2019/07/11/js/jsMM/"/>
      <url>/2019/07/11/js/jsMM/</url>
      
        <content type="html"><![CDATA[<h3 id="判断开头结尾"><a href="#判断开头结尾" class="headerlink" title="判断开头结尾"></a>判断开头结尾</h3><ul><li><b>startsWidth</b>判断以什么开头  </li><li><p><b>endsWidth</b>判断以什么结尾 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str=<span class="string">'https://www.4399.com'</span>; <span class="comment">//   alert(str.startsWith('a'))  //判断是否以'a'开头，返回bool值 endsWidth同理</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="字符串截取"><a href="#字符串截取" class="headerlink" title="字符串截取"></a>字符串截取</h3><ul><li><b>slice</b></li><li><b>substring</b></li><li><b>substr</b></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> str = <span class="string">'abcdef'</span>;</span><br><span class="line">str = str.slice(<span class="number">0</span>);<span class="comment">//返回整个字符串 abcdef</span></span><br><span class="line">str = str.substring(<span class="number">0</span>);<span class="comment">//返回整个字符串 abcdef</span></span><br><span class="line">str = str.substr(<span class="number">0</span>);<span class="comment">//返回整个字符串 abcdef</span></span><br><span class="line"><span class="comment">// 使用一个参数</span></span><br><span class="line">str = str.slice(<span class="number">2</span>);<span class="comment">//截取第二个之后所有的字符 cdef</span></span><br><span class="line">str = str.substring(<span class="number">2</span>);<span class="comment">//截取第二个之后所有的字符 cdef</span></span><br><span class="line">str = str.substr(<span class="number">2</span>);<span class="comment">//截取第二个之后所有的字符 cdef</span></span><br><span class="line"><span class="comment">// 使用两个参数</span></span><br><span class="line">str = str.slice(<span class="number">2</span>,<span class="number">4</span>);<span class="comment">//截取第二个到第四个之间的字符 cd</span></span><br><span class="line">str = str.substring(<span class="number">2</span>,<span class="number">4</span>);<span class="comment">//截取第二个到第四个之间的字符 cd</span></span><br><span class="line">str = str.substr(<span class="number">2</span>,<span class="number">4</span>);<span class="comment">//截取从第3个开始往后数4位之间的字符 cdef</span></span><br><span class="line"><span class="comment">// 使用两个负数</span></span><br><span class="line">str = str.slice(<span class="number">1</span>,<span class="number">-3</span>);<span class="comment">//截取第二个到第四个之间的字符 bc</span></span><br><span class="line">str = str.substring(<span class="number">1</span>,<span class="number">-3</span>);<span class="comment">//截取第二个到第四个之间的字符 a #负数转换为0</span></span><br><span class="line">str = str.substr(<span class="number">1</span>,<span class="number">-3</span>);<span class="comment">//不能为负数，若强行传递负数，会被当成0处理 ' ' #负数转换为0</span></span><br></pre></td></tr></table></figure><h3 id="字符串和数组相互转换"><a href="#字符串和数组相互转换" class="headerlink" title="字符串和数组相互转换"></a>字符串和数组相互转换</h3><ul><li><b>split</b></li><li><b>join</b></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 字符串转数组</span></span><br><span class="line"><span class="keyword">let</span> str = <span class="string">"abc,abcd,aaa"</span>;</span><br><span class="line">t = str.split(<span class="string">","</span>);<span class="comment">// 在每个逗号(,)处进行分解  ["abc", "abcd", "aaa"]</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">"helloworld"</span>;</span><br><span class="line">t1 = str.split(<span class="string">''</span>);  <span class="comment">//["h", "e", "l", "l", "o", "w", "o", "r", "l", "d"]</span></span><br><span class="line"><span class="comment">//  数组转字符串</span></span><br><span class="line"><span class="keyword">var</span> a, b;</span><br><span class="line">a = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line">b = a.join(<span class="string">"-"</span>);      <span class="comment">//"0-1-2-3-4"</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> String </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>st</title>
      <link href="/2019/07/05/st/"/>
      <url>/2019/07/05/st/</url>
      
        <content type="html"><![CDATA[<h1 id="所说的非官方个高考将开始对不合格一片特兹"><a href="#所说的非官方个高考将开始对不合格一片特兹" class="headerlink" title="所说的非官方个高考将开始对不合格一片特兹"></a>所说的非官方个高考将开始对不合格一片特兹</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.js</span>&#123; </span><br><span class="line"><span class="attribute">hright</span>:<span class="number">100</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 青川 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue</title>
      <link href="/2018/12/05/%E6%A8%A1%E6%9D%BF/"/>
      <url>/2018/12/05/%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<p>w</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> games </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据交互</title>
      <link href="/2018/07/11/data/%E6%95%B0%E6%8D%AE%E4%BA%A4%E4%BA%92/"/>
      <url>/2018/07/11/data/%E6%95%B0%E6%8D%AE%E4%BA%A4%E4%BA%92/</url>
      
        <content type="html"><![CDATA[<h2 id="http协议"><a href="#http协议" class="headerlink" title="http协议"></a>http协议</h2><ul><li>无状态</li><li>连接过程：连接-接受-发送请求</li><li>消息分成两部分，请求头&lt;=32K、请求体&lt;=2G</li></ul><h2 id="form"><a href="#form" class="headerlink" title="form"></a>form</h2><ul><li>最重要</li></ul><ol><li>action-提交到的位置</li><li>method–GET/POST/PUT/DELETE/HEAD<ul><li>GET:  把数据放在url传输     数据量很小、缓存。获取东西</li><li>POST: 把数据放在请求体里面  数据量大、不会缓存。发送东西，大量发送。</li><li>PUT:发送东西，大量发送。</li><li>DELETE:删除。</li><li>HEAD:让服务器只发送头回来就行(不需要内容)</li></ul></li><li>name 名字</li><li>enctype 上传文件需要设置的</li></ol><h2 id="ajax"><a href="#ajax" class="headerlink" title="ajax"></a>ajax</h2><ul><li>官方、不能跨域</li><li>单向</li><li>ajax好:<ol><li>用户体检好，性能高<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3></li></ol><ul><li>ajax-<h2 id="jsonp"><a href="#jsonp" class="headerlink" title="jsonp"></a>jsonp</h2></li></ul></li><li>民间、能跨域 不推荐</li><li>破坏了http自身的设计<h2 id="websocket"><a href="#websocket" class="headerlink" title="websocket"></a>websocket</h2></li><li>双向-数据实时性</li><li>html5 IE9+ </li><li>用的非常广</li><li>基于http</li><li>跨域</li><li>原生麻烦<h4 id="socket-io"><a href="#socket-io" class="headerlink" title="socket.io:"></a>socket.io:</h4></li></ul><ol><li>兼容的？</li><li>二进制数据</li></ol><ul><li>怎么用</li><li>聊天室</li><li>视频点播<h4 id="socket-io-1"><a href="#socket-io-1" class="headerlink" title="socket.io"></a>socket.io</h4></li><li><p>安装<code>npm i socket.io  -D</code></p><h4 id="websocket聊天室"><a href="#websocket聊天室" class="headerlink" title="websocket聊天室"></a>websocket聊天室</h4><ol><li>用户注册、登陆</li><li>发言 </li><li>离线消息</li></ol><ul><li>数据<ul><li>用户信息库</li><li>消息数据库</li></ul></li></ul><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><ol><li>关系形数据库—— MySQL、Oracle</li></ol><ul><li>优点 : 强大</li><li>缺点 : 性能低</li></ul><ol start="2"><li>文件形数据库—— SQLite</li></ol><ul><li>优点 : 简单</li><li>缺点 : 支撑不了庞大的应用、没法储存特别多的数据</li></ul><ol start="3"><li>文档形数据库—— MongoDB</li></ol><ul><li>优点 : 直接存储对象本身</li><li>缺点 : 不够严谨、性能偏低</li></ul><ol start="4"><li>空间形数据库—— 坐标、位置 .. GIS</li></ol><h4 id="数据库-1"><a href="#数据库-1" class="headerlink" title="数据库"></a>数据库</h4><p>类型:</p></li><li>数字 <ul><li>整数 thinyint(-128~127或者0~255)、int(21亿或43亿);</li><li>浮点数 float（保留到小数点8位） 、 double（308）</li></ul></li><li><p>字符串</p><ul><li>小字符串 varchar（255）</li><li>大字符串 text（2G）</li></ul><p>主键:</p></li><li><p>唯一</p></li><li>性能高</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 请求数据 </tag>
            
            <tag> ajax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据遍历</title>
      <link href="/2018/07/08/js/js1%20copy%202/"/>
      <url>/2018/07/08/js/js1%20copy%202/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h2 id="map-映射-一个对一个"><a href="#map-映射-一个对一个" class="headerlink" title="map      映射    一个对一个"></a>map      映射    一个对一个</h2> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> [<span class="number">12</span>,<span class="number">58</span>,<span class="number">60</span>,<span class="number">60</span>,<span class="number">99</span>,<span class="number">8</span>]</span><br><span class="line"> [<span class="string">"不及格"</span>,<span class="string">"不及格"</span>,<span class="string">"及格"</span>,<span class="string">"及格"</span>,<span class="string">"及格"</span>,<span class="string">"不及格"</span>];</span><br><span class="line"><span class="comment">// 1.使arr中数字乘以2，输出结果</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">12</span>, <span class="number">5</span>, <span class="number">8</span>];</span><br><span class="line"><span class="keyword">let</span> result = arr.map(<span class="function"><span class="params">item</span> =&gt;</span> item * <span class="number">2</span>)</span><br><span class="line"><span class="built_in">console</span>.log(result);<span class="comment">//(3) [24, 10, 16]</span></span><br><span class="line"><span class="comment">// ////////////////////</span></span><br><span class="line"><span class="comment">// 2.分数大于等于60的输出及格,小于60的输出不及格</span></span><br><span class="line"><span class="keyword">let</span> mark = [<span class="number">15</span>, <span class="number">88</span>, <span class="number">76</span>, <span class="number">60</span>, <span class="number">55</span>];</span><br><span class="line"><span class="keyword">let</span> markResult = mark.map(<span class="function"><span class="params">item</span>=&gt;</span> item &gt;= <span class="number">60</span> ? <span class="string">"及格"</span> : <span class="string">"不及格"</span></span><br><span class="line">)</span><br><span class="line"><span class="built_in">console</span>.log(markResult);<span class="comment">//["不及格", "及格", "及格", "及格", "不及格"]</span></span><br></pre></td></tr></table></figure><h2 id="reduce-汇总-一堆出来一个"><a href="#reduce-汇总-一堆出来一个" class="headerlink" title="reduce   汇总  一堆出来一个"></a>reduce   汇总  一堆出来一个</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  1.算个总数</span></span><br><span class="line">  [<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>]  =&gt; <span class="number">60</span>;</span><br><span class="line"><span class="comment">//  2.算个平均数</span></span><br><span class="line">  [<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>]  =&gt; <span class="number">20</span>;  </span><br><span class="line"></span><br><span class="line"> <span class="keyword">let</span> arr = [<span class="number">12</span>, <span class="number">541</span>, <span class="number">5461</span>, <span class="number">115</span>, <span class="number">656</span>];</span><br><span class="line"> <span class="keyword">let</span> arrRes = arr.reduce(<span class="function">(<span class="params">tmp, item, index</span>) =&gt;</span> tmp + item)</span><br><span class="line"><span class="built_in">console</span>.log(arrRes);<span class="comment">//6785</span></span><br><span class="line"><span class="comment">//2.算个平均数</span></span><br><span class="line"><span class="keyword">let</span> avgRes = arr.reduce(<span class="function">(<span class="params">tmp, item, index</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (index != arr.length - <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> tmp + item</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (tmp + item) / arr.length;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(avgRes);<span class="comment">//1357</span></span><br></pre></td></tr></table></figure><h2 id="filter-过滤器-保留一部分"><a href="#filter-过滤器-保留一部分" class="headerlink" title="filter   过滤器  保留一部分"></a>filter   过滤器  保留一部分</h2> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 1.算出能被3整除的数</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">12</span>, <span class="number">541</span>, <span class="number">5461</span>, <span class="number">115</span>, <span class="number">656</span>, <span class="number">99</span>, <span class="number">30</span>];</span><br><span class="line"><span class="keyword">let</span> result = arr.filter(<span class="function"><span class="params">item</span> =&gt;</span> item%<span class="number">3</span>==<span class="number">0</span>)</span><br><span class="line"><span class="built_in">console</span>.log(result); <span class="comment">//(3) [12, 99, 30]</span></span><br><span class="line"><span class="comment">// 2.价格大于10000的数据</span></span><br><span class="line"><span class="keyword">let</span> arrz=[</span><br><span class="line">    &#123;<span class="attr">title</span>:<span class="string">'男鞋'</span>,<span class="attr">price</span>:<span class="number">650</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">title</span>:<span class="string">'女鞋'</span>,<span class="attr">price</span>:<span class="number">15000</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">title</span>:<span class="string">'男装'</span>,<span class="attr">price</span>:<span class="number">100</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">title</span>:<span class="string">'女装'</span>,<span class="attr">price</span>:<span class="number">10000</span>&#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">let</span> pres = arrz.filter(<span class="function"><span class="params">item</span>=&gt;</span>item.price&gt;=<span class="number">10000</span>);</span><br><span class="line"><span class="built_in">console</span>.log(pres);<span class="comment">// &#123;title:'女鞋',price:15000&#125;, &#123;title:'女装',price:10000&#125;</span></span><br></pre></td></tr></table></figure><h2 id="fofEach-循环-迭代"><a href="#fofEach-循环-迭代" class="headerlink" title="fofEach  循环(迭代)"></a>fofEach  循环(迭代)</h2>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">12</span>, <span class="number">541</span>, <span class="number">5461</span>, <span class="number">115</span>, <span class="number">656</span>, <span class="number">99</span>, <span class="number">30</span>];</span><br><span class="line">     arr.forEach(<span class="function"><span class="params">item</span>=&gt;</span> <span class="built_in">console</span>.log(item))</span><br></pre></td></tr></table></figure><h1 id="数组遍历"><a href="#数组遍历" class="headerlink" title="数组遍历"></a>数组遍历</h1><h2 id="普通for循环，经常用的数组遍历"><a href="#普通for循环，经常用的数组遍历" class="headerlink" title="普通for循环，经常用的数组遍历"></a>普通for循环，经常用的数组遍历</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">45</span>, <span class="number">7</span>, <span class="string">'dd'</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(arr[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 打印结果 1 3 45 7 dd</span></span><br></pre></td></tr></table></figure><ul><li>优化版for循环:使用变量，将长度缓存起来，避免重复获取长度，数组很大时优化效果明显</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">45</span>, <span class="number">7</span>, <span class="string">'dd'</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j= <span class="number">0</span>, len = arr.length; j&lt;len; j++)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(arr[j]);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">// 打印结果 1 3 45 7 dd</span></span><br></pre></td></tr></table></figure><h2 id="forEach，"><a href="#forEach，" class="headerlink" title="forEach，"></a>forEach，</h2><ul><li>ES5推出的,数组自带的循环，主要功能是遍历数组。</li><li><p>forEach这种方法也有一个小缺陷：你不能使用break语句中断循环，也不能使用return语句返回到外层函数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">45</span>, <span class="number">7</span>, <span class="string">'dd'</span>];</span><br><span class="line">arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">value,i</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i+<span class="string">'--'</span>+value);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 打印结果</span></span><br><span class="line"><span class="comment">// 0--1</span></span><br><span class="line"><span class="comment">// 1--3 </span></span><br><span class="line"><span class="comment">// 2--45 </span></span><br><span class="line"><span class="comment">// 3--7 </span></span><br><span class="line"><span class="comment">// 4--dd</span></span><br></pre></td></tr></table></figure><h2 id="map遍历"><a href="#map遍历" class="headerlink" title="map遍历"></a>map遍历</h2><ul><li>map即是 “映射”的意思 用法与 forEach 相似<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">45</span>, <span class="number">7</span>, <span class="string">'dd'</span>];</span><br><span class="line">arr.map(<span class="function"><span class="keyword">function</span>(<span class="params">value,i</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i+<span class="string">'--'</span>+value);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 打印结果</span></span><br><span class="line"><span class="comment">// 0--1</span></span><br><span class="line"><span class="comment">// 1--3 </span></span><br><span class="line"><span class="comment">// 2--45 </span></span><br><span class="line"><span class="comment">// 3--7 </span></span><br><span class="line"><span class="comment">// 4--dd</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>map遍历支持使用return语句，支持return返回值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">45</span>, <span class="number">7</span>, <span class="string">'dd'</span>];</span><br><span class="line"><span class="keyword">var</span> b= arr.map(<span class="function"><span class="keyword">function</span>(<span class="params">value,i</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i+<span class="string">'--'</span>+value);</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(b);</span><br><span class="line"><span class="comment">// b返回 (5) [1, 3, 45, 7, "dd"]</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="for-of遍历-是ES6新增功能"><a href="#for-of遍历-是ES6新增功能" class="headerlink" title="for-of遍历 是ES6新增功能"></a>for-of遍历 是ES6新增功能</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">45</span>, <span class="number">7</span>, <span class="string">'dd'</span>];</span><br><span class="line"><span class="keyword">for</span>( <span class="keyword">let</span> i <span class="keyword">of</span> arr)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 打印结果: 1 3 45 7 dd</span></span><br></pre></td></tr></table></figure><ul><li>for-of这个方法避开了for-in循环的所有缺陷</li><li>与forEach()不同的是，它可以正确响应break、continue和return语句</li><li>for-of循环不仅支持数组，还支持大多数类数组对象</li><li>for-of循环也支持字符串遍历</li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 遍历 </tag>
            
            <tag> 循环 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解构赋值</title>
      <link href="/2018/07/05/js/8451/"/>
      <url>/2018/07/05/js/8451/</url>
      
        <content type="html"><![CDATA[<h4 id="结构赋值"><a href="#结构赋值" class="headerlink" title="结构赋值"></a>结构赋值</h4><ol><li>左右两边结构必须一样;</li><li>右边必须是个东西;</li><li>声明和赋值不能分开(必须在一句话里说完);<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 数组</span></span><br><span class="line"><span class="keyword">let</span> [aq,bq,cq]=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"> <span class="built_in">console</span>.log(aq);<span class="comment">//1</span></span><br><span class="line"> <span class="built_in">console</span>.log(bq);<span class="comment">//2</span></span><br><span class="line"> <span class="built_in">console</span>.log(cq);<span class="comment">//3</span></span><br><span class="line"> <span class="comment">// 对象</span></span><br><span class="line"> <span class="keyword">let</span> &#123;w,z,y&#125; = &#123;<span class="attr">w</span>:<span class="number">12</span>,<span class="attr">z</span>:<span class="number">66</span>,<span class="attr">y</span>:<span class="number">15</span>&#125;;</span><br><span class="line"> <span class="built_in">console</span>.log(w,z,y);<span class="comment">// 12 66 15</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git常用操作</title>
      <link href="/2018/07/05/GIt%E6%93%8D%E4%BD%9C/"/>
      <url>/2018/07/05/GIt%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p><code>git config --global user.name &quot;你的账号&quot;</code></p><p><code>git config --global user.email &quot;你的邮箱&quot;</code></p><p> 在文件中初始化Git（创建Git仓库）<code>git init</code></p><h3 id="提交仓库"><a href="#提交仓库" class="headerlink" title="提交仓库"></a>提交仓库</h3><ol><li>创建文件 <code>git touch a1.html</code> </li><li>文件提交到暂存区 <code>git add a1.html</code></li><li>文件提交描述 <code>git commit -m &#39;描述&#39;</code></li><li>查看文件状态 <code>git status</code></li><li>提交到仓库 <code>git push</code></li></ol><h3 id="Git克隆操作"><a href="#Git克隆操作" class="headerlink" title="Git克隆操作"></a>Git克隆操作</h3><p> <code>git clone 仓库地址</code></p><h3 id="新仓库添加本地文件"><a href="#新仓库添加本地文件" class="headerlink" title="新仓库添加本地文件"></a>新仓库添加本地文件</h3><ul><li>新建<b>码云/github</b>仓库</li><li>本地新建文件夹</li><li>新建的文件夹，点击鼠标右键，选择git bash here <code>git init</code></li><li>复制项目地址</li><li>然后<code>git remote add origin 地址</code></li><li>继续输入<code>git pull origin master</code> 命令，将码云上的仓库pull到本地文件夹</li><li>使用<code>git add -A  （. 表示所有的）或者 git add + 文件名</code>            // 将文件保存到缓存区</li><li>使用<code>git commit -m</code>‘新添加的文件内容描述’     //添加文件描述</li><li>使用<code>git push origin master</code> ，将本地仓库推送到远程仓库</li><li>ok了</li></ul>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模块化</title>
      <link href="/2018/07/05/js/js1%20copy%206/"/>
      <url>/2018/07/05/js/js1%20copy%206/</url>
      
        <content type="html"><![CDATA[<h2 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h2><ul><li>模块-组件-元件</li><li>模块：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  - 定义: model.js</span></span><br><span class="line">     define(<span class="function"><span class="keyword">function</span> (<span class="params">require,exports,module</span>) </span>&#123;</span><br><span class="line">    exports.a = <span class="number">12</span>;</span><br><span class="line">     exports.b=<span class="number">5</span>;</span><br><span class="line">&#125;);  </span><br><span class="line"></span><br><span class="line"><span class="comment">//   - 调用:  xx.html</span></span><br><span class="line">seajs.use([<span class="string">'xxxx.js'</span>,<span class="string">'xxx.js'</span>,...],<span class="function"><span class="keyword">function</span>(<span class="params">model1,model2,...</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol><li>民间的–sea.js 、require.js</li></ol><ul><li>CMD、AMD规范</li><li><p>区别：</p><p>html-&gt;js   use</p><p>js-&gt;  js   require</p></li></ul><ol start="2"><li><p>node.js模块化</p><ol><li>没有define</li><li>exports、require、module</li><li>引用自定义模块 1) 放到node_modules里,   2)前面加上./</li></ol><ul><li>引入: let mod = require(‘./aaa.js’)</li><li>输出: exports.xx = xxx; module.exports={x,x,x,y}</li></ul></li><li><p>ES6模块化</p><ul><li>import</li><li>export</li></ul><ul><li>引入:impo mod from = ‘./xx.js’</li><li>输出:expor{x,x,x}</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
            <tag> 模块化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>generator</title>
      <link href="/2018/07/05/js/js1%20copy%207/"/>
      <url>/2018/07/05/js/js1%20copy%207/</url>
      
        <content type="html"><![CDATA[<h2 id="generator"><a href="#generator" class="headerlink" title="generator"></a>generator</h2><h3 id="generator-生成器"><a href="#generator-生成器" class="headerlink" title="generator-生成器"></a>generator-生成器</h3><ul><li>普通函数- 一路到底</li><li><p>generator函数- 中间可以停 走走停停</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">function</span> *<span class="title">show</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">     alert(<span class="string">'a'</span>);</span><br><span class="line">     <span class="keyword">yield</span>;</span><br><span class="line">     alert(<span class="string">'b'</span>)</span><br><span class="line"> &#125;</span><br><span class="line"> show();</span><br><span class="line"> <span class="keyword">let</span> gentObj = show();</span><br><span class="line"> gentObj.next(); <span class="comment">//a</span></span><br><span class="line"> gentObj.next();<span class="comment">//b</span></span><br><span class="line"><span class="built_in">console</span>.log(gentObj)</span><br></pre></td></tr></table></figure></li><li><p>generator-yield是什么</p><ul><li>可以传参、可以返回</li><li>…..<br>本质：无感觉处理异步操作</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> generator </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>变量let与常量const</title>
      <link href="/2018/07/05/js/%E6%A8%A1%E6%9D%BF/"/>
      <url>/2018/07/05/js/%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h4 id="变量let与常量const"><a href="#变量let与常量const" class="headerlink" title="变量let与常量const"></a>变量let与常量const</h4><ul><li>ES5 var 问题<ul><li>可以重复声明</li><li>无法限制修改</li><li>没有块级作用域</li></ul></li><li>ES6 变量 let<ul><li>不能重复声明</li><li>可以重新定义</li><li>有块级作用域</li></ul></li><li>ES6 常量 const<ul><li>不能重复声明</li><li>不可以重新定义</li><li>有块级作用域</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 变量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>箭头函数</title>
      <link href="/2018/07/05/js/js1/"/>
      <url>/2018/07/05/js/js1/</url>
      
        <content type="html"><![CDATA[<ul><li><p>之前的函数是这样写的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 名字(<span class="params"></span>)</span>&#123;</span><br><span class="line">   <span class="comment">//  code</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>而ES6是↓</p></li><li><p>箭头函数</p><ul><li>如果只有一个参数，()可以省略</li><li>如果只有一个return {}可以省略 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">()=&gt;&#123; &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.onload= <span class="function"><span class="params">()</span>=&gt;</span> alert(<span class="string">'vb'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> show=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"666"</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> show=<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"666"</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> add = <span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">    alert(a+b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> add = <span class="function">(<span class="params">a,b</span>)=&gt;</span>&#123;</span><br><span class="line">    alert(a+b);</span><br><span class="line">&#125;</span><br><span class="line">add(<span class="number">1</span>,<span class="number">6</span>)</span><br></pre></td></tr></table></figure></li></ul><h4 id="函数-有参数"><a href="#函数-有参数" class="headerlink" title="函数-有参数"></a>函数-有参数</h4><ul><li>参数扩展/展开</li></ul><ol><li><p>收集参数</p><ul><li>收集剩余的参数</li><li>…args必须是最后一个<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">arg</span>(<span class="params">a,b,...args</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">    <span class="built_in">console</span>.log(b);</span><br><span class="line">    <span class="built_in">console</span>.log(...args);</span><br><span class="line">&#125;</span><br><span class="line">arg(<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">10</span>); </span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="comment">// 5 7 9 2 10</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>展开参数 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">let</span> array = [<span class="number">1</span>,<span class="number">55</span>,<span class="number">5</span>]</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">zhan</span>(<span class="params">a,b,c</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">    <span class="built_in">console</span>.log(b);</span><br><span class="line">    <span class="built_in">console</span>.log(c);</span><br><span class="line">&#125;</span><br><span class="line">zhan(...array) </span><br><span class="line"><span class="comment">//1</span></span><br><span class="line"><span class="comment">//55</span></span><br><span class="line"><span class="comment">//5</span></span><br><span class="line"><span class="comment">//////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr1=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>];</span><br><span class="line"><span class="keyword">let</span> arr2=[<span class="number">10</span>,<span class="number">22</span>,<span class="number">52</span>];</span><br><span class="line"><span class="keyword">let</span> arr3 = [...arr1,...arr2];</span><br><span class="line"><span class="built_in">console</span>.log(arr3);</span><br><span class="line"><span class="comment">// (6) [1, 2, 5, 10, 22, 52]</span></span><br><span class="line"><span class="comment">//////////////////////////////////</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">...args</span>)</span>&#123;</span><br><span class="line">  fadd(...args)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">fadd</span>(<span class="params">a,b</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(a+b);</span><br><span class="line">  &#125;</span><br><span class="line">  a(<span class="number">1</span>,<span class="number">6</span>)<span class="comment">//7</span></span><br></pre></td></tr></table></figure></li></ol></li></ul><ul><li>默认参数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">m</span>(<span class="params">a,b=<span class="number">1</span>,c=<span class="number">10</span></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(a,b,c); </span><br><span class="line"> &#125;</span><br><span class="line"> m(<span class="number">1</span>)  <span class="comment">//1 1 10</span></span><br><span class="line"> m(<span class="number">1</span>,<span class="number">2</span>)<span class="comment">//1 2 10</span></span><br><span class="line"> m(<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>)<span class="comment">// 1 2 5</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Promise</title>
      <link href="/2018/07/05/js/js1%20copy%205/"/>
      <url>/2018/07/05/js/js1%20copy%205/</url>
      
        <content type="html"><![CDATA[<ul><li>异步: 操作直接没啥关系,同时进行多个操作，代码复杂。</li><li>同步: 同时只能做一件事 代码简单。</li><li>本质：等待异步操作结束<ul><li>当状态改变的时候—调用之前挂起的then队列</li><li>then的时候直接执行对应的函数，并且参数给人家。</li></ul></li></ul><h4 id="Promise-用法"><a href="#Promise-用法" class="headerlink" title="Promise 用法"></a>Promise 用法</h4><h5 id="Promise-all-一个都不能错"><a href="#Promise-all-一个都不能错" class="headerlink" title="Promise.all  一个都不能错"></a>Promise.all  一个都不能错</h5><h5 id="Promise-race-只要有一个对"><a href="#Promise-race-只要有一个对" class="headerlink" title="Promise.race 只要有一个对"></a>Promise.race 只要有一个对</h5><ol><li><p>一个</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">  <span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.0.0.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//异步代码</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//resolve 成功</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//reject 失败</span></span></span><br><span class="line"><span class="javascript">            $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">                url: <span class="string">"data/tt.txt"</span>,</span></span><br><span class="line"><span class="javascript">                dataType: <span class="string">"json"</span>,</span></span><br><span class="line"><span class="javascript">                success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span></span><br><span class="line">                    resolve(data)</span><br><span class="line">                &#125;,</span><br><span class="line">                error(err) &#123;</span><br><span class="line">                    reject(err)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="javascript">        p.then(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">'成功'</span> + data)</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 调用成功</span></span></span><br><span class="line"><span class="javascript">        &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(err);</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">'失败'</span>)</span></span><br><span class="line"><span class="javascript">            <span class="comment">//失败了</span></span></span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p>多个</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.0.0.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">createPromise</span>(<span class="params">url</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//异步代码</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//resolve 成功</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//reject 失败</span></span></span><br><span class="line"><span class="javascript">                $.ajax(&#123;</span></span><br><span class="line">                    url,</span><br><span class="line"><span class="javascript">                    dataType: <span class="string">"json"</span>,</span></span><br><span class="line"><span class="javascript">                    success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span></span><br><span class="line">                        resolve(data)</span><br><span class="line">                    &#125;,</span><br><span class="line">                    error(err) &#123;</span><br><span class="line">                        reject(err)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="built_in">Promise</span>.all([</span></span><br><span class="line"><span class="javascript">            createPromise(<span class="string">'data/tt.txt'</span>),</span></span><br><span class="line"><span class="javascript">            createPromise(<span class="string">'data/jj.txt'</span>)</span></span><br><span class="line"><span class="javascript">        ]).then(<span class="function"><span class="keyword">function</span> (<span class="params">arr</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 全部成功</span></span></span><br><span class="line"><span class="javascript">            alert(<span class="string">'成功'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> [arr1, arr2] = arr;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(arr);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(arr1);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(arr2);</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//失败一个或多个</span></span></span><br><span class="line"><span class="javascript">                alert(<span class="string">'失败'</span>);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(err);</span></span><br><span class="line">            &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">Promise</span>.all([</span></span><br><span class="line"><span class="javascript">            $.ajax(&#123; <span class="attr">url</span>: <span class="string">'data/tt.txt'</span>, <span class="attr">dataType</span>: <span class="string">"json"</span> &#125;),</span></span><br><span class="line"><span class="javascript">            $.ajax(&#123; <span class="attr">url</span>: <span class="string">'data/jj.txt'</span>, <span class="attr">dataType</span>: <span class="string">"json"</span> &#125;)</span></span><br><span class="line">        ])</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>jq中的promise</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.0.0.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">Promise</span>.all([</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;<span class="attr">url</span>:<span class="string">'data/tt.txt'</span>,<span class="attr">dataType</span>: <span class="string">"json"</span>&#125;),</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;<span class="attr">url</span>:<span class="string">'data/jj.txt'</span>,<span class="attr">dataType</span>: <span class="string">"json"</span>&#125;)</span></span><br><span class="line"><span class="javascript">    ]).then(<span class="function"><span class="keyword">function</span> (<span class="params">arr</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> [arr1,arr2] = arr;</span></span><br><span class="line"><span class="javascript">        alert(<span class="string">'成功'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(arr);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(arr1);</span></span><br><span class="line"><span class="javascript">           <span class="built_in">console</span>.log(arr2);</span></span><br><span class="line"><span class="javascript">    &#125;,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        alert(<span class="string">'失败'</span>)</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
